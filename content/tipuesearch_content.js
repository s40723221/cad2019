var tipuesearch = {"pages": [{'title': 'week', 'text': 'week2-5 \n week6-9 \n week10-14 \n week15-18 \n', 'tags': '', 'url': 'week.html'}, {'title': 'week2-5', 'text': 'week2 \n 創建github倉儲並且練習github指令 \n 1.創立並且加入課程倉儲git clone到近端上(至mde.tw中下載2019fall可攜套件)。 \n 2.使用git config --global user設定姓名、email、proxy。 \n 3.使用git submodule add 之指令建立目錄並取下子模組。 \n 4.輸入python -m pip install flask cors。 \n 5.當要開啟近端時必須要先進入cmsimde才能夠打上python wsgi.py指令，且開啟的隨身碟必須為正確的非虛擬的磁碟槽(如:d: or e:)才能夠開啟。 \n \n week3 \n Solvespace編譯 \n 1. Y:\\portablegit\\bin\\sh.exe 改名為 sh_rename_for_solvespace.exe。 \n 2.查驗github版本(2.13以上)。 \n 3. \xa0git clone\xa0 --recurse-submodules。 \n 4.編輯cmakelist內之713及714行(加入#字號)。 \n 5. cd solvespace>cd extlib>cd libpng>mkdir build>cd build。 \n 6.執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make。 \n 7.進行 \xa0libpng.dll.a 更名, 更名名為 libpng_static.a。 \n 8.回到 solvespace 原始碼目錄,建立 build 目錄後進入 build 目錄。 \n 9.在一次執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make。 \n \n week4 \n 錄影程式及字幕編輯軟件 \n 1.錄影可以使用 apowerREC \n \n 或者是 ShareX \n \n 2.編輯字幕可以使用學校網站的字幕編輯軟體 Aegisub ，運用音檔或者是影片檔配置字幕。 \n \n 3.若使用音檔則必須將影片和字幕檔結合，我選擇使用 Arctime \n \n 4.接下來要將浮水印印在影片左下角，使用 Video watermark 。 \n 課程的浮水印: \n \n week5 \n solvespace圖面繪製練習 \n 1.運用左方工作區繪製出長方形。 \n 2.點選線並且運用快捷鍵D標註尺寸如:長度40 寬度30。 \n 3.繪製長方形參照線，點選線後運用快捷鍵G即可以繪製出綠色參照線。 \n 4.繪製圓形孔，繪製完後四個孔之孔徑均不相同。 \n 5.按下兩孔並且用快捷鍵Q使其孔徑一致其他孔也是一樣方式。 \n 6.運用前述的快捷鍵D標註孔之尺寸。 \n 7.運用SHIFT加X使其拉伸並且輸入想要的厚度。 \n 8.若要看正視圖可以使用W，W判定的標準是以游標最接近的面去做正視。 \n 9.若要看到等角圖則可以使用F3使其回到等角圖的樣子。 \n 成品圖 \n \n 影片教學: \n \n 使用快捷鍵: \n sketch rectangle\xa0 (R) \n sketch line segment (S) \n sketch circle \xa0(C) \n constrain distance\xa0 (D) \n constrain angle  ( N) \n nearest isometric view\xa0 (F3)\xa0 \n align view to workplane (W)\xa0 \n equal length/radius/angle \xa0 (Q) \n extrude \xa0(shift+X) \n 常使用其他快捷鍵: \n sketh arc of a circle (A) \n sketh cubic bezier spline (B)   \n two line perpencudilar \xa0([) \n two line\xa0parallel\xa0 (L) \n two line symmetry \xa0 (Y) \n verticel \xa0(V) \n horizontal (H) \n same direction (X) \n split line (I) \n tangent arc (shift+A) \n benchmark (P) \n', 'tags': '', 'url': 'week2-5.html'}, {'title': 'week6-9', 'text': 'week6 \n 1.參數化零組件繪製二輪自走車 \n 1. 將solvespace打開 \n 2. 繪製輪胎及輪軸 \n (1)繪製一圓圈(使用指令c)作為輪胎 \n (2)運用New Group中的sketh in new workplace(快捷鍵為shift+w)進入草圖中所選定的基準面 \n (3)在草圖中運用上述C快捷鍵繪製一圓作為輪軸並且輸入其長度 \n (4)儲存零件等等作為組立時使用 \n 3. 繪製車身 \n (1)繪製車身本體，並且輸入其安裝輪軸時的長度及車身的長度和厚度 \n (2)車身前端必須做除料，繪製好要除料的部分之後用difference將該部位去除 \n (3)在車身兩個立面打上輪軸孔以便等一下安裝車軸 \n 4. 組立自走車 \n (1)將輪軸零件已在車身零件檔中開啟 \n (2)運用平行的功能將輪軸軸心與孔的軸心平行對準 \n (3)運用重和鍵將輪軸與孔重合 \n (4)重複(1)-(3)的步驟將另外一輪之輪軸組立起來 \n 操作影片 : \n \n 成品圖: \n \n 2.網際 V-rep 模型控制: \n 1.將mde.tw中的task1打開，並且下載其中的 V-rep 3.6.1 rev 4.7z 壓縮檔和網際 V-rep 模型控制: web_vrep2.zip (local) \n 2.將隨身碟中start_mdecourse打開並且在其中輸入regedit \n 3.打上regedit後會將登錄編輯程式打開，按下第一個HKEY_CLASSES_ROOT並用編輯中的尋找，尋找.py \n 4.再找到路徑.py_auto_file/shell/edit/command \n 5.將.py這個機碼和其子機碼刪除(包刮py_auto_file) (若尋找時找不到.py之資料夾,則1到5點可以不做) \n 6.從下載下來的web_vrep2中app.py用編輯器開啟 \n 7.從下載下來的路徑V-REP3\\V-REP_PRO_EDU中找到vrep.exe \n 8.用v_rep中的file的open scene將下載下來的web_vrep2中two_wheeler.ttt打開 \n 9.剛剛編輯器開啟之app.py使用編輯器的tool中的go將其控制器開啟 \n 10.使用 localhost: 5000 將控制器開啟 \n 11.運用控制器的前後左右測試是否可以控制車子 \n 12v-rep必須要將右上方開始鈕按下 \n 操作影片: \n \n 3. 新增啟動與停止按鈕: \n 1.將mde_course打開 \n 2.用編輯器開啟 templates 中的 controls.html \n 3.在第19行打上從下方向左按鈕指令複製來的指令並且將其改寫成start和stop \n 4.因為有start和stop兩個按鈕所以必須要放置兩行指令 \n 指令: <td><a class="pure-button pure-button-primary" href="/do/start">start</a></td><a class="pure-button pure-button-primary" href="/do/stop">stop</a></td> \n 5.結束後儲存並且用上方tool中的go測試是否已將按鈕放入 \n 6.用編輯器開啟 vrep_linefollower 定義其中開始和結束按鈕 \n 指令: if direction == \'start\':  vrep.simxStartSimulation(self.clientID, vrep.simx_opmode_oneshot)  elif direction == \'stop\':  vrep.simxStopSimulation(self.clientID, vrep.simx_opmode_oneshot)  else : \n 7.到課程網站中的老師倉儲中尋找issue \n 8.其中有一項issue為置入start和stop按鈕的指令 \n 9.複製並且依照影片中將其貼上 \n 10.在每行指令前定義好所需的指令例如:(if else elif) \n 11.打開 vrep.exe 並且用編輯器打開 app.py 並執行tool中的go \n 12.測試是否有成功運行 \n 操作影片: \n \n week7 \n (1).solvespace編譯-更改HELP中ABOUT的VERSION \n 1.開啟solvespace.cpp找到952行在solvespace後方加上compiled by 自己的學號 \n 2.刪除舊的這個路徑中201906_fall\\tmp\\solvespace\\build\\src\\CMakeFiles的 \n solvespace.cpp.obj檔，此檔案若無刪除solvespace就只會讀取這個舊有的檔案 \n 3.進入solvespace資料夾中的這個資料夾用指令cd build \n 4.在黑窗中打上mingw32-make \n 5.開啟solvespace \n 6.在help中的about是否有compiled by 自己學號 \n 操作影片: \n \n (2.)solvespace繪圖驗證 \n 第1題 \n 操作影片: \n \n 成品圖: \n \n 第3題 \n 操作影片: \n \n 成品圖: \n \n 第4題 \n 操作影片: \n \n 成品圖: \n \n 第6題 \n 操作影片: \n \n 成品圖: \n \n 第7題 \n 操作影片: \n \n 成品圖: \n \n 第8題 \n 操作影片: \n \n 成品圖: \n \n 第9題 \n 操作影片: \n \n 成品圖: \n \n 第10題 \n 操作影片: \n \n 成品圖: \n \n 第11題 \n 操作影片: \n \n 成品圖: \n \n 第12題: \n 1.繪製長方形形狀的本體 \n 2.繪製上方左右兩片圓柱形特徵 \n 3.連接兩片圓柱型特徵 \n 4.挖除中央圓型孔洞 \n 5.下方圓型柱也以一樣的方式繪製並且若出現紅色部分則可以使用 右上視窗的force nurbs surfaces to triangle鈕消除錯誤 \n 操作影片: \n \n 成品圖: \n \n 第13題: \n 1.繪製梯形形狀的本體 \n 2.繪製上方兩片梯形特徵 \n 3.挖除梯形特徵上的槽孔 \n 4.繪製底部圓柱若出現紅色部分則使用右上方視窗assemble按鈕 \n 5.挖除中央圓孔若出現紅色部分使用右上視窗的force nurbs surfaces to triangle鈕 \n 操作影片: \n \n 成品圖: \n \n 第14題 \n 操作影片: \n \n 成品圖: \n \n 第15題 \n 操作影片: \n \n 成品圖: \n \n 第16題 \n 1.將solvespace打開 \n 2.繪製本體外徑為5.75厚度為1.5的圓 \n 3.轉到主要工作平面並且移除一外徑為5.25厚度為1.25的圓型孔 \n 4.轉到主要工作平面，繪製一外徑為3.5的參考圓並且在其影片提到之位置會上4組具有外徑1厚度為0.25且中央有一0.5孔之特徵 \n 5.轉到主要工作平面移除中央外徑4.25之圓型孔 \n 6.轉到主要工作平面繪製8個外徑為0.5的圓型孔所有大小可以使用快捷鍵G使其一致 \n 操作影片: \n \n 成品圖: \n \n 第17題 \n 操作影片: \n \n 成品圖: \n \n 第18題 \n 操作影片: \n \n 成品圖: \n \n week8 \n 1.建立webot開啟檔案: \n (1)將mde.tw中的 Webots_2019b_rev1.7z \n (2)將start_mdecourse.bat檔複製一份並且貼上 \n (3)將 start_mdecourse.bat名稱更改為start_mdecourse -webot.bat檔 \n (4)依照影片把這行指令貼入path_webots=%Disk%:\\Webots_2019b_rev1\\msys64\\mingw64\\bin;%Disk%:\\Webots_2019b_rev1\\msys64\\usr\\bin \n (5)確定路徑是正確的webot檔案應該在Y:\\201906_fall\\data中 \n (6)開啟webot開啟檔也就是start_mdecourse -webot.bat \n (7)開啟webot中的open sample world測試是否可以導入 \n 操作影片: \n \n 2.開啟網誌: \n (1)將leo edit開起來 \n (2)將config中的pelican.leo丟入leo edit裡面 \n (3)修改影片中有講的路徑中的siteurl更改成自己blog網址 \n (4)依照影片中的步驟將指令複製並在黑窗中執行 \n 操作影片: \n \n 3.以ssh對github連線: \n (1)到y槽的portablegit將sh_for_solvespace檔案複製並修改成sh.exe \n (2)進入黑窗輸入sh和 ssh-keygen -t rsa -b 4096 -C "使用者學號" \n (3)下載putty連線工具箱並利用其中的putty.gen創建兩把金鑰 \n (4)修改啟動器中的指令 \n set GIT_HOME=%Disk%:\\portablegit\\bin\\\nset GIT_SSH=%Disk%:\\putty\\plink.exe (5) 進入config中更改指令 url = git@github.com:mdecourse/cad2019.git 在mdecourse的地方要改成自己的學號 \n (6)開啟putty.exe進去設定github.com和proxy位置其中ssh中的auth的地方必須選取剛剛創建的金鑰 \n (7)用編輯器複製課程網站中的step6指令並且儲存放入.ssh資料夾之中 \n (8)進入github並且在setting中的ssh將金鑰開啟並複製放入金鑰設置處 \n 操作影片: \n \n week9 \n 期中影片報告: \n', 'tags': '', 'url': 'week6-9.html'}, {'title': 'week10-14', 'text': 'week10 \n 由組長建立分組網站並且請組員加入分組網站 \n 1.由組長創建 分組網站 https://s40723221.github.io/cad2019bg2/content/index.html 和 分組倉儲 https://github.com/s40723221/cad2019bg2 \n 2.由組員透過fork加入創建之分組網站 \n 3.加入後用git\xa0 clone submodules 組別倉儲網址\xa0 \n 4.以git pull request的方式進行推送(必須由組長認證推送內容才可以成功推送) \n 5.閱讀nx12及nx3的操作手冊和教程 \n 操作影片: \n \n nx12下載的方式與利用virtual box開啟方式 \n nx12及nx3下載點和資料參考點(下載必須要使用虛擬主機板本):\xa0 http://mde.tw/cad2019/content/NX.html   \n VirtualBox下載點:\xa0 https://briian.com/5690/ \n 操作影片: \n \n 繪圖軟體安裝及基本設定 \n nx12及nx3下載點和資料參考點:\xa0 http://mde.tw/cad2019/content/NX.html   \n solidwork下載點和資料參考點: \xa0 http://mde.tw/cad2019/content/Solidwo... \n  VirtualBox下載點:\xa0 https://briian.com/5690/ \n  pro/e官方網站:\xa0 https://www.ptc.com/en/products/cad/p...   \n pro/e試用版載點: \xa0 https://www.ptc.com/tw/products/cad/c...   \n inventor試用版載點: \xa0 https://www.autodesk.com/products/inv...   \n autodesk 官方網站:\xa0 https://www.autodesk.com.tw/ \n 操作影片: \n \n week12 \n 組員個別整理電子書內容 \n 參考NX設計電子書第四章內容 :\xa0 http://mde.tw/cad2019/downloads/NX-12-for-Engineering-Design.pdf \n CH4 \n 本章討論的是NX12的3D建模基礎教學，NX12如同其他的繪圖軟體同樣也可以透過左邊的歷史紀錄去更改之前的零件尺寸，本章節也會介紹一些常見的功能，像是長出、旋轉繞形、取線的修剪、圓柱體和圓錐體等圖形的繪製。 \n 4-1功能類型 \n 功能類型包括了六種:圖形、特徵的參照、特徵的掃描、刪除特徵功能、提取功能、自訂義功能。 \n (如下圖所示:可以在NX12的介面處右方下拉箭頭挑選常用的功能) \n \n 4.1.1圖元 \n 這些功能列表可以得到如:方塊或者是圓柱體、錐形、球體等圖形，並且讓使用者可以後續再做其他的建模。 \n 4.1.2參照功能 \n 可以用下列圖片中的功能來創建參考點或者是參考軸、參照平面、參照座標方便去定義其他的圖形位置。 \n \n 4.1.3掃描功能 \n 在NX左方的MENU功能表中的insert(插入)中design feature(設計特徵)的功能達到如同:長出、旋轉繞形、延曲線掃描、掃描混成等功能。 \n 4.1.4刪除特徵功能 \n 如上圖所示可以使用:如同孔、鍵座、凹槽等等切除特徵的功能都可以從上圖中找到。 \n 4.1.5提取特徵功能 \n 1.在NX12中提取特徵的功能有如同:薄殼、位移特徵、加厚特徵等功能。 \n 2.在NX左方的MENU功能表中的insert(插入)中的associative copy中的extract geometry(提取幾何或複製幾何)可以複製一個實體(該實體由多個特徵集合而成)。 \n 3.在NX左方的MENU功能表中的insert(插入)中的offset/scale(位移/比例)中，可以看到位移、薄殼、增加厚度的功能。 \n 4.在NX左方的MENU功能表中的insert(插入)中的surface(面)中，可以看到曲線及曲面的繪製功能在功能表的此處。 \n 4.1.6自訂義功能 \n 在NX左方的MENU功能表中的insert(插入)中的design feature中的user defined可以自訂義自己想要的介面功能。 \n 零組件繪製: \n 1. 繪製錐形軸 :sketch選取平面>選取好平面後繪製草圖中的圓形(直徑為4 (inch)>利用extrude(長出)(高度為18 (inch)>點選insert中的design feature中con(錐體)並且選取直徑和Z軸>在base diameter中輸入4 (inch)、top diameter中輸入6 (inch)、height中輸入10 (inch)>在錐體直徑較大的一端繪製一(直徑為6)和一(高度為20)的圓柱體點擊ok就完成了。 \n 操作影片: \n \n 2 .繪製葉輪 :sketh選取平面>點選menu中的insert中的direct sketch>創建兩個point其座標分別是(0,0,0)及(11.75,6,0)>使用arc(弧線)繪製如影片中的形狀>使用insert裡面的design feature 中的con(錐體)並且記得要將放置點設置於座標(14,0,0)的位置>設置錐體尺寸 base diameter ( 底部直徑 )=15 、 Top Diameter( 頂部直徑 ) = 8 、 Height( 高度 ) = 16.25> 利用長出將剛剛繪製好的葉輪草圖長出實體 ( 厚度為 12)> 利用 insert> Associative Copy>Pattern Feature( 陣列 )> 數量為五個分布角度為 72 度點擊 ok 就完成了。 \n 操作影片: \n \n 3. 繪製底座箱體: sketh選取平面>先繪製立面和立面上的斜邊特徵>繪製左邊圓型特徵(以旋轉長出的方式繪製)>挖除圓形孔>繪製長在圓形孔內的特徵(包括圓柱體及四邊長方體)>將內部小圓柱體的螺紋補上(螺紋的小徑為0.395)>在左方圓柱體的上方加上3個半圓特徵並且在上方打上小孔>將右方的平面補上並且在上面打上小孔>在兩個小孔中也必須繪製螺紋(螺紋的小徑為0.395)>繪製上方的斜形肋特徵>繪製完之後檢查一下是否正確就完成了。 \n 操作影片: \n', 'tags': '', 'url': 'week10-14.html'}, {'title': 'week15-18', 'text': '', 'tags': '', 'url': 'week15-18.html'}, {'title': 'note', 'text': '1. \n Question: 修正Commitg 失敗無法push的bug，如何解除此bug? \n Qwestion image: \n \n \n Answer:利用 強制推送 的指令使其能夠覆蓋掉之前不必要的分支，也就是利用git push -f指令，在單人時可以採用這項方式，但是在多人協同時若使用會發生將上一個commit的人的資料給覆蓋的情況，所以要小心使用，若萬一真的覆蓋掉了就必須請另一端的同事以git push -f之指令重新推送才有辦法解決此問題。 \n 2. \n Question:若在別台電腦開啟putty但找不到github.com怎麼處理? \n Answer: \n 在老師issue中ssh教學步驟的step2有putty_home.zip壓縮檔 ( 圖一) 下載下來後用regedit指令在黑窗中開啟登錄編輯模式，並且在其中找到user開頭的目錄並且找到內部儲存github.com的資料夾，匯出之後會得到putty_home.reg( 圖二) 並且去執行putty.exe在其中就會看到github.com了按下後照著我的步驟 (圖三) 就可以成功了。 \n 圖一: \n \n 圖二: \n \n 圖三: \n \n \n 3. \n 正向 git pull request : 當組員從組長的帳號中提取新版本的commitu,也就是git pull 的時候我們稱做正向的git pull request而他指指另也就是git pull 組長分組帳號網址，當組員在push必且創建new pull request時也必須通過這樣的機制請組長同意pull request才能夠將組員的資料作合併。 \n 逆向git pull request : 反向的pull\xa0 request則是在組員自己的帳號下創建new pull request並且輸入指令git pull github.com/組員/組別/compare/master...組長; master這樣一來就可以將組長帳號下的提交版本反向的提到組員帳號再經由組圓自己同意new pull request和git push後就可以得到最新的版本。', 'tags': '', 'url': 'note.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n ======= \n 1.將solvespace打開 2.將輪胎及輪胎的軸心繪製 (1)運用C快捷鍵繪製一圓作為輪胎 (2)運用New Group中的sketh in new workplace(快捷鍵為shift+w)進入草圖中所選定的基準面 (3)在草圖中運用上述C快捷鍵繪製一圓作為輪軸 \n \xa0 \n \n \n >>>>>>> 847d9a6d40ff48b4b37d706d87bb8e9ecd94d0c4', 'tags': '', 'url': 'Develop.html'}]};